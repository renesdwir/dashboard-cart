import Head from "next/head";
import { Inter } from "@next/font/google";
import { Title as TitleComp } from "@/src/components/styledcomponent/global";
import { useQuery } from "@tanstack/react-query";
import { fetchProduct } from "./api/products";
import { ProductInterface } from "../interface/productInterface";
import { useEffect, useState } from "react";
const inter = Inter({ subsets: ["latin"] });
import {
  Chart as ChartJS,
  CategoryScale,
  LinearScale,
  BarElement,
  ChartOptions,
  Legend,
  Title,
  Tooltip,
} from "chart.js";

ChartJS.register(CategoryScale, LinearScale, BarElement, Legend, Title, Tooltip);
import React from "react";
import { Bar } from "react-chartjs-2";

const chartOptions: ChartOptions<"bar"> = {
  indexAxis: "y" as const,
  responsive: true,
  maintainAspectRatio: false,
  scales: {
    x: {
      ticks: {
        stepSize: 1,
      },
    },
  },
};
export default function Home() {
  const [dataChart, setDataChart] = useState<{ [key: string]: number }>({});
  const { isLoading, error, data } = useQuery<ProductInterface>({
    queryKey: ["products"],
    queryFn: fetchProduct,
    staleTime: 60000,
  });

  useEffect(() => {
    if (data) {
      let obj: { [key: string]: number } = {};
      data.products.forEach((product) => {
        if (!obj[product.brand]) {
          obj[product.brand] = 1;
        } else {
          obj[product.brand] = obj[product.brand] + 1;
        }
      });
      setDataChart(obj);
    }
  }, [data]);

  const dataForChart = {
    labels: Object.keys(dataChart),
    datasets: [
      {
        axis: "y",
        label: "Number Of Items",
        data: Object.values(dataChart),
        fill: false,
        backgroundColor: ["rgba(105, 19, 216, 0.2)"],
        borderColor: ["#6913D8"],
        borderWidth: 1,
      },
    ],
  };
  if (error) return "An error has occurred: " + error;
  return (
    <>
      <Head>
        <title>Dashboard-Cart</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <TitleComp>Dashboard</TitleComp>
        {isLoading ? (
          <div>Loading...</div>
        ) : (
          <div>
            <Bar data={dataForChart} width={400} height={2500} options={chartOptions} />
          </div>
        )}
      </main>
    </>
  );
}
